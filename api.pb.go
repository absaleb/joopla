// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

package zoopla

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PropertyRequest struct {
	SomeField            string   `protobuf:"bytes,1,opt,name=some_field,json=someField,proto3" json:"some_field,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PropertyRequest) Reset()         { *m = PropertyRequest{} }
func (m *PropertyRequest) String() string { return proto.CompactTextString(m) }
func (*PropertyRequest) ProtoMessage()    {}
func (*PropertyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0}
}

func (m *PropertyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PropertyRequest.Unmarshal(m, b)
}
func (m *PropertyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PropertyRequest.Marshal(b, m, deterministic)
}
func (m *PropertyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PropertyRequest.Merge(m, src)
}
func (m *PropertyRequest) XXX_Size() int {
	return xxx_messageInfo_PropertyRequest.Size(m)
}
func (m *PropertyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PropertyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PropertyRequest proto.InternalMessageInfo

func (m *PropertyRequest) GetSomeField() string {
	if m != nil {
		return m.SomeField
	}
	return ""
}

type PropertyResponse struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PropertyResponse) Reset()         { *m = PropertyResponse{} }
func (m *PropertyResponse) String() string { return proto.CompactTextString(m) }
func (*PropertyResponse) ProtoMessage()    {}
func (*PropertyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{1}
}

func (m *PropertyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PropertyResponse.Unmarshal(m, b)
}
func (m *PropertyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PropertyResponse.Marshal(b, m, deterministic)
}
func (m *PropertyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PropertyResponse.Merge(m, src)
}
func (m *PropertyResponse) XXX_Size() int {
	return xxx_messageInfo_PropertyResponse.Size(m)
}
func (m *PropertyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PropertyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PropertyResponse proto.InternalMessageInfo

func (m *PropertyResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type Coordinates struct {
	Latitude             float64  `protobuf:"fixed64,1,opt,name=Latitude,json=latitude,proto3" json:"Latitude,omitempty"`
	Longitude            float64  `protobuf:"fixed64,2,opt,name=Longitude,json=longitude,proto3" json:"Longitude,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Coordinates) Reset()         { *m = Coordinates{} }
func (m *Coordinates) String() string { return proto.CompactTextString(m) }
func (*Coordinates) ProtoMessage()    {}
func (*Coordinates) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{2}
}

func (m *Coordinates) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Coordinates.Unmarshal(m, b)
}
func (m *Coordinates) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Coordinates.Marshal(b, m, deterministic)
}
func (m *Coordinates) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Coordinates.Merge(m, src)
}
func (m *Coordinates) XXX_Size() int {
	return xxx_messageInfo_Coordinates.Size(m)
}
func (m *Coordinates) XXX_DiscardUnknown() {
	xxx_messageInfo_Coordinates.DiscardUnknown(m)
}

var xxx_messageInfo_Coordinates proto.InternalMessageInfo

func (m *Coordinates) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *Coordinates) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

type PafAddress struct {
	AddressKey           string   `protobuf:"bytes,1,opt,name=AddressKey,json=addressKey,proto3" json:"AddressKey,omitempty"`
	OrganisationKey      string   `protobuf:"bytes,2,opt,name=OrganisationKey,json=organisationKey,proto3" json:"OrganisationKey,omitempty"`
	PostcodeType         string   `protobuf:"bytes,3,opt,name=PostcodeType,json=postcodeType,proto3" json:"PostcodeType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PafAddress) Reset()         { *m = PafAddress{} }
func (m *PafAddress) String() string { return proto.CompactTextString(m) }
func (*PafAddress) ProtoMessage()    {}
func (*PafAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{3}
}

func (m *PafAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PafAddress.Unmarshal(m, b)
}
func (m *PafAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PafAddress.Marshal(b, m, deterministic)
}
func (m *PafAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PafAddress.Merge(m, src)
}
func (m *PafAddress) XXX_Size() int {
	return xxx_messageInfo_PafAddress.Size(m)
}
func (m *PafAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_PafAddress.DiscardUnknown(m)
}

var xxx_messageInfo_PafAddress proto.InternalMessageInfo

func (m *PafAddress) GetAddressKey() string {
	if m != nil {
		return m.AddressKey
	}
	return ""
}

func (m *PafAddress) GetOrganisationKey() string {
	if m != nil {
		return m.OrganisationKey
	}
	return ""
}

func (m *PafAddress) GetPostcodeType() string {
	if m != nil {
		return m.PostcodeType
	}
	return ""
}

type Location struct {
	CountryCode          string       `protobuf:"bytes,1,opt,name=CountryCode,json=countryCode,proto3" json:"CountryCode,omitempty"`
	County               string       `protobuf:"bytes,2,opt,name=County,json=county,proto3" json:"County,omitempty"`
	Locality             string       `protobuf:"bytes,3,opt,name=Locality,json=locality,proto3" json:"Locality,omitempty"`
	PafUdprn             string       `protobuf:"bytes,4,opt,name=PafUdprn,json=pafUdprn,proto3" json:"PafUdprn,omitempty"`
	PostalCode           string       `protobuf:"bytes,5,opt,name=PostalCode,json=postalCode,proto3" json:"PostalCode,omitempty"`
	PropertyNumberOrName string       `protobuf:"bytes,6,opt,name=PropertyNumberOrName,json=propertyNumberOrName,proto3" json:"PropertyNumberOrName,omitempty"`
	StreetName           string       `protobuf:"bytes,7,opt,name=StreetName,json=streetName,proto3" json:"StreetName,omitempty"`
	TownOrCity           string       `protobuf:"bytes,8,opt,name=TownOrCity,json=townOrCity,proto3" json:"TownOrCity,omitempty"`
	Coordinates          *Coordinates `protobuf:"bytes,9,opt,name=Coordinates,json=coordinates,proto3" json:"Coordinates,omitempty"`
	PafAddress           *PafAddress  `protobuf:"bytes,10,opt,name=PafAddress,json=pafAddress,proto3" json:"PafAddress,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Location) Reset()         { *m = Location{} }
func (m *Location) String() string { return proto.CompactTextString(m) }
func (*Location) ProtoMessage()    {}
func (*Location) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{4}
}

func (m *Location) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Location.Unmarshal(m, b)
}
func (m *Location) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Location.Marshal(b, m, deterministic)
}
func (m *Location) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Location.Merge(m, src)
}
func (m *Location) XXX_Size() int {
	return xxx_messageInfo_Location.Size(m)
}
func (m *Location) XXX_DiscardUnknown() {
	xxx_messageInfo_Location.DiscardUnknown(m)
}

var xxx_messageInfo_Location proto.InternalMessageInfo

func (m *Location) GetCountryCode() string {
	if m != nil {
		return m.CountryCode
	}
	return ""
}

func (m *Location) GetCounty() string {
	if m != nil {
		return m.County
	}
	return ""
}

func (m *Location) GetLocality() string {
	if m != nil {
		return m.Locality
	}
	return ""
}

func (m *Location) GetPafUdprn() string {
	if m != nil {
		return m.PafUdprn
	}
	return ""
}

func (m *Location) GetPostalCode() string {
	if m != nil {
		return m.PostalCode
	}
	return ""
}

func (m *Location) GetPropertyNumberOrName() string {
	if m != nil {
		return m.PropertyNumberOrName
	}
	return ""
}

func (m *Location) GetStreetName() string {
	if m != nil {
		return m.StreetName
	}
	return ""
}

func (m *Location) GetTownOrCity() string {
	if m != nil {
		return m.TownOrCity
	}
	return ""
}

func (m *Location) GetCoordinates() *Coordinates {
	if m != nil {
		return m.Coordinates
	}
	return nil
}

func (m *Location) GetPafAddress() *PafAddress {
	if m != nil {
		return m.PafAddress
	}
	return nil
}

type BranchUpdateRequest struct {
	BranchName           string    `protobuf:"bytes,1,opt,name=BranchName,json=branchName,proto3" json:"BranchName,omitempty"`
	BranchReference      string    `protobuf:"bytes,2,opt,name=BranchReference,json=branchReference,proto3" json:"BranchReference,omitempty"`
	Email                string    `protobuf:"bytes,3,opt,name=Email,json=email,proto3" json:"Email,omitempty"`
	Location             *Location `protobuf:"bytes,4,opt,name=Location,json=location,proto3" json:"Location,omitempty"`
	Telephone            string    `protobuf:"bytes,5,opt,name=Telephone,json=telephone,proto3" json:"Telephone,omitempty"`
	Website              string    `protobuf:"bytes,6,opt,name=Website,json=website,proto3" json:"Website,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *BranchUpdateRequest) Reset()         { *m = BranchUpdateRequest{} }
func (m *BranchUpdateRequest) String() string { return proto.CompactTextString(m) }
func (*BranchUpdateRequest) ProtoMessage()    {}
func (*BranchUpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{5}
}

func (m *BranchUpdateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BranchUpdateRequest.Unmarshal(m, b)
}
func (m *BranchUpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BranchUpdateRequest.Marshal(b, m, deterministic)
}
func (m *BranchUpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BranchUpdateRequest.Merge(m, src)
}
func (m *BranchUpdateRequest) XXX_Size() int {
	return xxx_messageInfo_BranchUpdateRequest.Size(m)
}
func (m *BranchUpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BranchUpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BranchUpdateRequest proto.InternalMessageInfo

func (m *BranchUpdateRequest) GetBranchName() string {
	if m != nil {
		return m.BranchName
	}
	return ""
}

func (m *BranchUpdateRequest) GetBranchReference() string {
	if m != nil {
		return m.BranchReference
	}
	return ""
}

func (m *BranchUpdateRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *BranchUpdateRequest) GetLocation() *Location {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *BranchUpdateRequest) GetTelephone() string {
	if m != nil {
		return m.Telephone
	}
	return ""
}

func (m *BranchUpdateRequest) GetWebsite() string {
	if m != nil {
		return m.Website
	}
	return ""
}

type BranchUpdateResponse struct {
	Result               string   `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BranchUpdateResponse) Reset()         { *m = BranchUpdateResponse{} }
func (m *BranchUpdateResponse) String() string { return proto.CompactTextString(m) }
func (*BranchUpdateResponse) ProtoMessage()    {}
func (*BranchUpdateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{6}
}

func (m *BranchUpdateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BranchUpdateResponse.Unmarshal(m, b)
}
func (m *BranchUpdateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BranchUpdateResponse.Marshal(b, m, deterministic)
}
func (m *BranchUpdateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BranchUpdateResponse.Merge(m, src)
}
func (m *BranchUpdateResponse) XXX_Size() int {
	return xxx_messageInfo_BranchUpdateResponse.Size(m)
}
func (m *BranchUpdateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BranchUpdateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BranchUpdateResponse proto.InternalMessageInfo

func (m *BranchUpdateResponse) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func init() {
	proto.RegisterType((*PropertyRequest)(nil), "mashroom.zoopla.PropertyRequest")
	proto.RegisterType((*PropertyResponse)(nil), "mashroom.zoopla.PropertyResponse")
	proto.RegisterType((*Coordinates)(nil), "mashroom.zoopla.Coordinates")
	proto.RegisterType((*PafAddress)(nil), "mashroom.zoopla.PafAddress")
	proto.RegisterType((*Location)(nil), "mashroom.zoopla.Location")
	proto.RegisterType((*BranchUpdateRequest)(nil), "mashroom.zoopla.BranchUpdateRequest")
	proto.RegisterType((*BranchUpdateResponse)(nil), "mashroom.zoopla.BranchUpdateResponse")
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_00212fb1f9d3bf1c) }

var fileDescriptor_00212fb1f9d3bf1c = []byte{
	// 646 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x55, 0xed, 0x6e, 0xd3, 0x3c,
	0x14, 0x56, 0xf7, 0xd1, 0x35, 0xa7, 0x7d, 0xdf, 0x22, 0x53, 0xa1, 0x32, 0xc6, 0x54, 0x22, 0x90,
	0x26, 0x24, 0x32, 0xe8, 0xc4, 0x2f, 0x24, 0x24, 0x36, 0x60, 0x42, 0x54, 0x5b, 0x95, 0x6d, 0x20,
	0x8d, 0x1f, 0xc8, 0x49, 0x4e, 0xb7, 0x68, 0x89, 0x6d, 0x6c, 0x87, 0xa9, 0xbb, 0x07, 0xae, 0x80,
	0xdb, 0xe3, 0x42, 0x90, 0x1d, 0xa7, 0x1f, 0x74, 0x82, 0x3f, 0xfd, 0x97, 0xf3, 0x9c, 0xc7, 0xe7,
	0xc3, 0xcf, 0xe3, 0x16, 0x3c, 0x2a, 0xd2, 0x40, 0x48, 0xae, 0x39, 0x69, 0xe7, 0x54, 0x5d, 0x4a,
	0xce, 0xf3, 0xe0, 0x86, 0x73, 0x91, 0x51, 0xff, 0x39, 0xb4, 0x87, 0x92, 0x0b, 0x94, 0x7a, 0x1c,
	0xe2, 0xb7, 0x02, 0x95, 0x26, 0x0f, 0x01, 0x14, 0xcf, 0xf1, 0xeb, 0x28, 0xc5, 0x2c, 0xe9, 0xd6,
	0x7a, 0xb5, 0x1d, 0x2f, 0xf4, 0x0c, 0xf2, 0xde, 0x00, 0xfe, 0x53, 0xb8, 0x33, 0x3d, 0xa1, 0x04,
	0x67, 0x0a, 0xc9, 0x3d, 0xa8, 0x2b, 0x4d, 0x75, 0xa1, 0x1c, 0xdd, 0x45, 0xfe, 0x21, 0x34, 0x0f,
	0x38, 0x97, 0x49, 0xca, 0xa8, 0x46, 0x45, 0x36, 0xa1, 0x31, 0xa0, 0x3a, 0xd5, 0x45, 0x82, 0x96,
	0x58, 0x0b, 0x1b, 0x99, 0x8b, 0xc9, 0x16, 0x78, 0x03, 0xce, 0x2e, 0xca, 0xe4, 0x8a, 0x4d, 0x7a,
	0x59, 0x05, 0xf8, 0x37, 0x00, 0x43, 0x3a, 0x7a, 0x93, 0x24, 0x12, 0x95, 0x22, 0xdb, 0x00, 0xee,
	0xf3, 0x23, 0x8e, 0x5d, 0x4b, 0xa0, 0x13, 0x84, 0xec, 0x40, 0xfb, 0x58, 0x5e, 0x50, 0x96, 0x2a,
	0xaa, 0x53, 0xce, 0x0c, 0x69, 0xc5, 0x92, 0xda, 0x7c, 0x1e, 0x26, 0x3e, 0xb4, 0x86, 0x5c, 0xe9,
	0x98, 0x27, 0x78, 0x3a, 0x16, 0xd8, 0x5d, 0xb5, 0xb4, 0x96, 0x98, 0xc1, 0xfc, 0x1f, 0xab, 0xd0,
	0x18, 0xf0, 0xd8, 0x9e, 0x21, 0x3d, 0xb3, 0x51, 0xc1, 0xb4, 0x1c, 0x1f, 0x70, 0xb7, 0x85, 0x17,
	0x36, 0xe3, 0x29, 0x64, 0xee, 0xc2, 0x32, 0xaa, 0x9e, 0x75, 0x9b, 0x1c, 0xdb, 0xe5, 0x79, 0x4c,
	0xb3, 0x54, 0x8f, 0x5d, 0x9b, 0x46, 0xe6, 0x62, 0x93, 0x1b, 0xd2, 0xd1, 0x59, 0x22, 0x24, 0xeb,
	0xae, 0x95, 0x39, 0xe1, 0x62, 0xb3, 0xac, 0x19, 0x91, 0x66, 0xb6, 0xe1, 0x7a, 0xb9, 0xac, 0x98,
	0x20, 0xa4, 0x0f, 0x9d, 0x4a, 0x8f, 0xa3, 0x22, 0x8f, 0x50, 0x1e, 0xcb, 0x23, 0x9a, 0x63, 0xb7,
	0x6e, 0x99, 0x1d, 0x71, 0x4b, 0xce, 0xd4, 0x3c, 0xd1, 0x12, 0x51, 0x5b, 0xe6, 0x46, 0x59, 0x53,
	0x4d, 0x10, 0x93, 0x3f, 0xe5, 0xd7, 0xec, 0x58, 0x1e, 0x98, 0x69, 0x1b, 0x65, 0x5e, 0x4f, 0x10,
	0xf2, 0x7a, 0x4e, 0xd7, 0xae, 0xd7, 0xab, 0xed, 0x34, 0xfb, 0x5b, 0xc1, 0x1f, 0xe6, 0x0a, 0x66,
	0x38, 0xe6, 0x8e, 0xa6, 0x46, 0x78, 0x35, 0x2b, 0x67, 0x17, 0xec, 0xf1, 0x07, 0x0b, 0xc7, 0xa7,
	0x94, 0x10, 0xc4, 0xe4, 0xdb, 0xff, 0x55, 0x83, 0xbb, 0xfb, 0x92, 0xb2, 0xf8, 0xf2, 0x4c, 0x24,
	0x54, 0x63, 0xe5, 0xdb, 0x6d, 0x80, 0x12, 0xb6, 0x4b, 0x39, 0x57, 0x44, 0x13, 0xc4, 0xb8, 0xa2,
	0xcc, 0x87, 0x38, 0x42, 0x89, 0x2c, 0xc6, 0xca, 0x15, 0xd1, 0x3c, 0x4c, 0x3a, 0xb0, 0xfe, 0x2e,
	0xa7, 0x69, 0xe6, 0x74, 0x5a, 0x47, 0x13, 0x90, 0x97, 0x53, 0x1b, 0x58, 0x91, 0x9a, 0xfd, 0xfb,
	0x0b, 0x23, 0x57, 0x84, 0x52, 0x5b, 0xeb, 0x98, 0x2d, 0xf0, 0x4e, 0x31, 0x43, 0x71, 0xc9, 0x59,
	0x25, 0x9f, 0xa7, 0x2b, 0x80, 0x74, 0x61, 0xe3, 0x33, 0x46, 0x2a, 0xd5, 0x95, 0x60, 0x1b, 0xd7,
	0x65, 0xe8, 0x07, 0xd0, 0x99, 0xdf, 0x72, 0xfa, 0xd6, 0x24, 0xaa, 0x22, 0xd3, 0xd5, 0x5b, 0x2b,
	0xa3, 0xfe, 0xcf, 0x35, 0xf8, 0xef, 0xdc, 0x4e, 0x71, 0x82, 0xf2, 0x7b, 0x1a, 0x23, 0xf9, 0x02,
	0xad, 0xd9, 0x0a, 0xe4, 0xf1, 0xc2, 0xb8, 0xb7, 0x5c, 0xe3, 0xe6, 0x93, 0x7f, 0xb0, 0xdc, 0x18,
	0x27, 0xd0, 0x1a, 0xa4, 0x4a, 0x57, 0xd6, 0x23, 0xbd, 0x45, 0xf9, 0xe6, 0x7f, 0x57, 0x36, 0x1f,
	0xfd, 0x85, 0xe1, 0x8a, 0x9e, 0xc1, 0xff, 0x65, 0x9b, 0xa5, 0x97, 0x7d, 0x8b, 0x19, 0x2e, 0xbb,
	0x6c, 0x08, 0xcd, 0x43, 0x5c, 0xf2, 0x0d, 0x7c, 0x82, 0xf6, 0x4c, 0xcd, 0x0f, 0x6c, 0xc4, 0x97,
	0x52, 0x77, 0x7f, 0xef, 0xfc, 0xc5, 0x45, 0xaa, 0x33, 0x1a, 0x05, 0xfc, 0x4a, 0xd3, 0x67, 0x8a,
	0x67, 0x85, 0x71, 0xa7, 0x0a, 0x62, 0x9e, 0xef, 0x56, 0xa7, 0x77, 0x23, 0x1a, 0x5f, 0x21, 0x4b,
	0x76, 0xcb, 0x2a, 0x51, 0xdd, 0xfe, 0x69, 0xec, 0xfd, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x9f, 0x1c,
	0x71, 0xfa, 0x41, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ZooplaServiceClient is the client API for ZooplaService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ZooplaServiceClient interface {
	BranchUpdate(ctx context.Context, in *BranchUpdateRequest, opts ...grpc.CallOption) (*BranchUpdateResponse, error)
	ListProperty(ctx context.Context, in *PropertyRequest, opts ...grpc.CallOption) (*PropertyResponse, error)
	UpdateProperty(ctx context.Context, in *PropertyRequest, opts ...grpc.CallOption) (*PropertyResponse, error)
	DeleteProperty(ctx context.Context, in *PropertyRequest, opts ...grpc.CallOption) (*PropertyResponse, error)
	GetProperty(ctx context.Context, in *PropertyRequest, opts ...grpc.CallOption) (*PropertyResponse, error)
	GetPropertyInfo(ctx context.Context, in *PropertyRequest, opts ...grpc.CallOption) (*PropertyResponse, error)
}

type zooplaServiceClient struct {
	cc *grpc.ClientConn
}

func NewZooplaServiceClient(cc *grpc.ClientConn) ZooplaServiceClient {
	return &zooplaServiceClient{cc}
}

func (c *zooplaServiceClient) BranchUpdate(ctx context.Context, in *BranchUpdateRequest, opts ...grpc.CallOption) (*BranchUpdateResponse, error) {
	out := new(BranchUpdateResponse)
	err := c.cc.Invoke(ctx, "/mashroom.zoopla.ZooplaService/BranchUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zooplaServiceClient) ListProperty(ctx context.Context, in *PropertyRequest, opts ...grpc.CallOption) (*PropertyResponse, error) {
	out := new(PropertyResponse)
	err := c.cc.Invoke(ctx, "/mashroom.zoopla.ZooplaService/ListProperty", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zooplaServiceClient) UpdateProperty(ctx context.Context, in *PropertyRequest, opts ...grpc.CallOption) (*PropertyResponse, error) {
	out := new(PropertyResponse)
	err := c.cc.Invoke(ctx, "/mashroom.zoopla.ZooplaService/UpdateProperty", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zooplaServiceClient) DeleteProperty(ctx context.Context, in *PropertyRequest, opts ...grpc.CallOption) (*PropertyResponse, error) {
	out := new(PropertyResponse)
	err := c.cc.Invoke(ctx, "/mashroom.zoopla.ZooplaService/DeleteProperty", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zooplaServiceClient) GetProperty(ctx context.Context, in *PropertyRequest, opts ...grpc.CallOption) (*PropertyResponse, error) {
	out := new(PropertyResponse)
	err := c.cc.Invoke(ctx, "/mashroom.zoopla.ZooplaService/GetProperty", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zooplaServiceClient) GetPropertyInfo(ctx context.Context, in *PropertyRequest, opts ...grpc.CallOption) (*PropertyResponse, error) {
	out := new(PropertyResponse)
	err := c.cc.Invoke(ctx, "/mashroom.zoopla.ZooplaService/GetPropertyInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ZooplaServiceServer is the server API for ZooplaService service.
type ZooplaServiceServer interface {
	BranchUpdate(context.Context, *BranchUpdateRequest) (*BranchUpdateResponse, error)
	ListProperty(context.Context, *PropertyRequest) (*PropertyResponse, error)
	UpdateProperty(context.Context, *PropertyRequest) (*PropertyResponse, error)
	DeleteProperty(context.Context, *PropertyRequest) (*PropertyResponse, error)
	GetProperty(context.Context, *PropertyRequest) (*PropertyResponse, error)
	GetPropertyInfo(context.Context, *PropertyRequest) (*PropertyResponse, error)
}

func RegisterZooplaServiceServer(s *grpc.Server, srv ZooplaServiceServer) {
	s.RegisterService(&_ZooplaService_serviceDesc, srv)
}

func _ZooplaService_BranchUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BranchUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZooplaServiceServer).BranchUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mashroom.zoopla.ZooplaService/BranchUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZooplaServiceServer).BranchUpdate(ctx, req.(*BranchUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZooplaService_ListProperty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PropertyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZooplaServiceServer).ListProperty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mashroom.zoopla.ZooplaService/ListProperty",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZooplaServiceServer).ListProperty(ctx, req.(*PropertyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZooplaService_UpdateProperty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PropertyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZooplaServiceServer).UpdateProperty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mashroom.zoopla.ZooplaService/UpdateProperty",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZooplaServiceServer).UpdateProperty(ctx, req.(*PropertyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZooplaService_DeleteProperty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PropertyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZooplaServiceServer).DeleteProperty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mashroom.zoopla.ZooplaService/DeleteProperty",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZooplaServiceServer).DeleteProperty(ctx, req.(*PropertyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZooplaService_GetProperty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PropertyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZooplaServiceServer).GetProperty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mashroom.zoopla.ZooplaService/GetProperty",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZooplaServiceServer).GetProperty(ctx, req.(*PropertyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZooplaService_GetPropertyInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PropertyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZooplaServiceServer).GetPropertyInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mashroom.zoopla.ZooplaService/GetPropertyInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZooplaServiceServer).GetPropertyInfo(ctx, req.(*PropertyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ZooplaService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mashroom.zoopla.ZooplaService",
	HandlerType: (*ZooplaServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "BranchUpdate",
			Handler:    _ZooplaService_BranchUpdate_Handler,
		},
		{
			MethodName: "ListProperty",
			Handler:    _ZooplaService_ListProperty_Handler,
		},
		{
			MethodName: "UpdateProperty",
			Handler:    _ZooplaService_UpdateProperty_Handler,
		},
		{
			MethodName: "DeleteProperty",
			Handler:    _ZooplaService_DeleteProperty_Handler,
		},
		{
			MethodName: "GetProperty",
			Handler:    _ZooplaService_GetProperty_Handler,
		},
		{
			MethodName: "GetPropertyInfo",
			Handler:    _ZooplaService_GetPropertyInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}
